// Do not modify this file. It's generated by Framework.Cli.
//
namespace Database.dbo
{
    using Framework.Dal;
    using System;

    [SqlTable("dbo", "Airline")]
    public class Airline : Row
    {
        [SqlField("Id", typeof(Airline_Id), true)]
        public int Id { get; set; }

        [SqlField("Text", typeof(Airline_Text))]
        public string Text { get; set; }

        [SqlField("Code", typeof(Airline_Code))]
        public string Code { get; set; }

        [SqlField("Country", typeof(Airline_Country))]
        public string Country { get; set; }
    }

    public class Airline_Id : Cell<Airline> { }

    public class Airline_Text : Cell<Airline> { }

    public class Airline_Code : Cell<Airline> { }

    public class Airline_Country : Cell<Airline> { }

    [SqlTable("dbo", "Airport")]
    public class Airport : Row
    {
        [SqlField("Id", typeof(Airport_Id), true)]
        public int Id { get; set; }

        [SqlField("Text", typeof(Airport_Text))]
        public string Text { get; set; }

        [SqlField("Code", typeof(Airport_Code))]
        public string Code { get; set; }

        [SqlField("CountryId", typeof(Airport_CountryId))]
        public int? CountryId { get; set; }
    }

    public class Airport_Id : Cell<Airport> { }

    public class Airport_Text : Cell<Airport> { }

    public class Airport_Code : Cell<Airport> { }

    public class Airport_CountryId : Cell<Airport> { }

    [SqlTable("dbo", "AirportDisplay")]
    public class AirportDisplay : Row
    {
        [SqlField("AirportId", typeof(AirportDisplay_AirportId))]
        public int AirportId { get; set; }

        [SqlField("AirportText", typeof(AirportDisplay_AirportText))]
        public string AirportText { get; set; }

        [SqlField("AirportCode", typeof(AirportDisplay_AirportCode))]
        public string AirportCode { get; set; }

        [SqlField("CountryId", typeof(AirportDisplay_CountryId))]
        public int? CountryId { get; set; }

        [SqlField("CountryText", typeof(AirportDisplay_CountryText))]
        public string CountryText { get; set; }

        [SqlField("CountryContinent", typeof(AirportDisplay_CountryContinent))]
        public string CountryContinent { get; set; }
    }

    public class AirportDisplay_AirportId : Cell<AirportDisplay> { }

    public class AirportDisplay_AirportText : Cell<AirportDisplay> { }

    public class AirportDisplay_AirportCode : Cell<AirportDisplay> { }

    public class AirportDisplay_CountryId : Cell<AirportDisplay> { }

    public class AirportDisplay_CountryText : Cell<AirportDisplay> { }

    public class AirportDisplay_CountryContinent : Cell<AirportDisplay> { }

    [SqlTable("dbo", "Country")]
    public class Country : Row
    {
        [SqlField("Id", typeof(Country_Id), true)]
        public int Id { get; set; }

        [SqlField("Text", typeof(Country_Text))]
        public string Text { get; set; }

        [SqlField("TextShort", typeof(Country_TextShort))]
        public string TextShort { get; set; }

        [SqlField("Continent", typeof(Country_Continent))]
        public string Continent { get; set; }
    }

    public class Country_Id : Cell<Country> { }

    public class Country_Text : Cell<Country> { }

    public class Country_TextShort : Cell<Country> { }

    public class Country_Continent : Cell<Country> { }

    [SqlTable("dbo", "Flight")]
    public class Flight : Row
    {
        [SqlField("Id", typeof(Flight_Id), true)]
        public int Id { get; set; }

        [SqlField("Date", typeof(Flight_Date))]
        public DateTime? Date { get; set; }

        [SqlField("Number", typeof(Flight_Number))]
        public double? Number { get; set; }

        [SqlField("AirlineCode", typeof(Flight_AirlineCode))]
        public string AirlineCode { get; set; }

        [SqlField("AirlineText", typeof(Flight_AirlineText))]
        public string AirlineText { get; set; }

        [SqlField("AirlineValid", typeof(Flight_AirlineValid))]
        public string AirlineValid { get; set; }

        [SqlField("AirportCode", typeof(Flight_AirportCode))]
        public string AirportCode { get; set; }

        [SqlField("AirportText", typeof(Flight_AirportText))]
        public string AirportText { get; set; }

        [SqlField("AirportValid", typeof(Flight_AirportValid))]
        public string AirportValid { get; set; }
    }

    public class Flight_Id : Cell<Flight> { }

    public class Flight_Date : Cell<Flight> { }

    public class Flight_Number : Cell<Flight> { }

    public class Flight_AirlineCode : Cell<Flight> { }

    public class Flight_AirlineText : Cell<Flight> { }

    public class Flight_AirlineValid : Cell<Flight> { }

    public class Flight_AirportCode : Cell<Flight> { }

    public class Flight_AirportText : Cell<Flight> { }

    public class Flight_AirportValid : Cell<Flight> { }

    [SqlTable("dbo", "LoLoation")]
    public class LoLoation : Row
    {
        [SqlField("Id", typeof(LoLoation_Id), true)]
        public int Id { get; set; }

        [SqlField("Name", typeof(LoLoation_Name))]
        public string Name { get; set; }
    }

    public class LoLoation_Id : Cell<LoLoation> { }

    public class LoLoation_Name : Cell<LoLoation> { }

    [SqlTable("dbo", "LoRole")]
    public class LoRole : Row
    {
        [SqlField("Id", typeof(LoRole_Id), true)]
        public int Id { get; set; }

        [SqlField("Name", typeof(LoRole_Name))]
        public string Name { get; set; }

        [SqlField("IsAdmin", typeof(LoRole_IsAdmin))]
        public bool IsAdmin { get; set; }
    }

    public class LoRole_Id : Cell<LoRole> { }

    public class LoRole_Name : Cell<LoRole> { }

    public class LoRole_IsAdmin : Cell<LoRole> { }

    [SqlTable("dbo", "LoRoleAccess")]
    public class LoRoleAccess : Row
    {
        [SqlField("UserId", typeof(LoRoleAccess_UserId))]
        public int UserId { get; set; }

        [SqlField("UserName", typeof(LoRoleAccess_UserName))]
        public string UserName { get; set; }

        [SqlField("LoationId", typeof(LoRoleAccess_LoationId))]
        public int? LoationId { get; set; }

        [SqlField("LoationName", typeof(LoRoleAccess_LoationName))]
        public string LoationName { get; set; }
    }

    public class LoRoleAccess_UserId : Cell<LoRoleAccess> { }

    public class LoRoleAccess_UserName : Cell<LoRoleAccess> { }

    public class LoRoleAccess_LoationId : Cell<LoRoleAccess> { }

    public class LoRoleAccess_LoationName : Cell<LoRoleAccess> { }

    [SqlTable("dbo", "LoRoleLoation")]
    public class LoRoleLoation : Row
    {
        [SqlField("Id", typeof(LoRoleLoation_Id), true)]
        public int Id { get; set; }

        [SqlField("RoleId", typeof(LoRoleLoation_RoleId))]
        public int? RoleId { get; set; }

        [SqlField("UserId", typeof(LoRoleLoation_UserId))]
        public int? UserId { get; set; }

        [SqlField("LoationId", typeof(LoRoleLoation_LoationId))]
        public int LoationId { get; set; }

        [SqlField("IsActive", typeof(LoRoleLoation_IsActive))]
        public bool IsActive { get; set; }
    }

    public class LoRoleLoation_Id : Cell<LoRoleLoation> { }

    public class LoRoleLoation_RoleId : Cell<LoRoleLoation> { }

    public class LoRoleLoation_UserId : Cell<LoRoleLoation> { }

    public class LoRoleLoation_LoationId : Cell<LoRoleLoation> { }

    public class LoRoleLoation_IsActive : Cell<LoRoleLoation> { }

    [SqlTable("dbo", "LoRoleMatrix")]
    public class LoRoleMatrix : Row
    {
        [SqlField("UserId", typeof(LoRoleMatrix_UserId))]
        public int UserId { get; set; }

        [SqlField("UserName", typeof(LoRoleMatrix_UserName))]
        public string UserName { get; set; }

        [SqlField("LoationId", typeof(LoRoleMatrix_LoationId))]
        public int LoationId { get; set; }

        [SqlField("LoationName", typeof(LoRoleMatrix_LoationName))]
        public string LoationName { get; set; }

        [SqlField("RoleId", typeof(LoRoleMatrix_RoleId))]
        public int RoleId { get; set; }

        [SqlField("RoleName", typeof(LoRoleMatrix_RoleName))]
        public string RoleName { get; set; }

        [SqlField("IsRole", typeof(LoRoleMatrix_IsRole))]
        public bool? IsRole { get; set; }

        [SqlField("IsDirect", typeof(LoRoleMatrix_IsDirect))]
        public bool? IsDirect { get; set; }

        [SqlField("IsAdmin", typeof(LoRoleMatrix_IsAdmin))]
        public bool? IsAdmin { get; set; }

        [SqlField("IsAdminModule", typeof(LoRoleMatrix_IsAdminModule))]
        public bool? IsAdminModule { get; set; }

        [SqlField("IsAccess", typeof(LoRoleMatrix_IsAccess))]
        public int? IsAccess { get; set; }
    }

    public class LoRoleMatrix_UserId : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_UserName : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_LoationId : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_LoationName : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_RoleId : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_RoleName : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_IsRole : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_IsDirect : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_IsAdmin : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_IsAdminModule : Cell<LoRoleMatrix> { }

    public class LoRoleMatrix_IsAccess : Cell<LoRoleMatrix> { }

    [SqlTable("dbo", "LoRoleUser")]
    public class LoRoleUser : Row
    {
        [SqlField("Id", typeof(LoRoleUser_Id), true)]
        public int Id { get; set; }

        [SqlField("UserId", typeof(LoRoleUser_UserId))]
        public int UserId { get; set; }

        [SqlField("RoleId", typeof(LoRoleUser_RoleId))]
        public int RoleId { get; set; }

        [SqlField("IsActive", typeof(LoRoleUser_IsActive))]
        public bool IsActive { get; set; }
    }

    public class LoRoleUser_Id : Cell<LoRoleUser> { }

    public class LoRoleUser_UserId : Cell<LoRoleUser> { }

    public class LoRoleUser_RoleId : Cell<LoRoleUser> { }

    public class LoRoleUser_IsActive : Cell<LoRoleUser> { }

    [SqlTable("dbo", "SyRole")]
    public class SyRole : Row
    {
        [SqlField("Id", typeof(SyRole_Id), true)]
        public int Id { get; set; }

        [SqlField("Name", typeof(SyRole_Name))]
        public string Name { get; set; }

        [SqlField("IsAdmin", typeof(SyRole_IsAdmin))]
        public bool? IsAdmin { get; set; }
    }

    public class SyRole_Id : Cell<SyRole> { }

    public class SyRole_Name : Cell<SyRole> { }

    public class SyRole_IsAdmin : Cell<SyRole> { }

    [SqlTable("dbo", "SyRoleAccess")]
    public class SyRoleAccess : Row
    {
        [SqlField("UserId", typeof(SyRoleAccess_UserId))]
        public int UserId { get; set; }

        [SqlField("UserName", typeof(SyRoleAccess_UserName))]
        public string UserName { get; set; }

        [SqlField("RoleId", typeof(SyRoleAccess_RoleId))]
        public int? RoleId { get; set; }

        [SqlField("RoleName", typeof(SyRoleAccess_RoleName))]
        public string RoleName { get; set; }

        [SqlField("IsAdmin", typeof(SyRoleAccess_IsAdmin))]
        public bool? IsAdmin { get; set; }
    }

    public class SyRoleAccess_UserId : Cell<SyRoleAccess> { }

    public class SyRoleAccess_UserName : Cell<SyRoleAccess> { }

    public class SyRoleAccess_RoleId : Cell<SyRoleAccess> { }

    public class SyRoleAccess_RoleName : Cell<SyRoleAccess> { }

    public class SyRoleAccess_IsAdmin : Cell<SyRoleAccess> { }

    [SqlTable("dbo", "SyRoleUser")]
    public class SyRoleUser : Row
    {
        [SqlField("Id", typeof(SyRoleUser_Id), true)]
        public int Id { get; set; }

        [SqlField("UserId", typeof(SyRoleUser_UserId))]
        public int UserId { get; set; }

        [SqlField("RoleId", typeof(SyRoleUser_RoleId))]
        public int RoleId { get; set; }

        [SqlField("IsActive", typeof(SyRoleUser_IsActive))]
        public bool IsActive { get; set; }
    }

    public class SyRoleUser_Id : Cell<SyRoleUser> { }

    public class SyRoleUser_UserId : Cell<SyRoleUser> { }

    public class SyRoleUser_RoleId : Cell<SyRoleUser> { }

    public class SyRoleUser_IsActive : Cell<SyRoleUser> { }

    [SqlTable("dbo", "SyUser")]
    public class SyUser : Row
    {
        [SqlField("Id", typeof(SyUser_Id), true)]
        public int Id { get; set; }

        [SqlField("Name", typeof(SyUser_Name))]
        public string Name { get; set; }
    }

    public class SyUser_Id : Cell<SyUser> { }

    public class SyUser_Name : Cell<SyUser> { }

    [SqlTable("dbo", "TableName")]
    public class TableName : Row
    {
        [SqlField("TableName2", typeof(TableName_TableName2))]
        public string TableName2 { get; set; }

        [SqlField("IsView", typeof(TableName_IsView))]
        public bool? IsView { get; set; }
    }

    public class TableName_TableName2 : Cell<TableName> { }

    public class TableName_IsView : Cell<TableName> { }
}
